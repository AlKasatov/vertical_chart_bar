{"version":3,"sources":["components/VerticalChartBar/VerticalChartBar.jsx","components/VisualizationDataContainer/VisualizationDataContainer.jsx","App.js","index.js","components/VisualizationDataContainer/VisualizationDataContainer.module.css","components/VerticalChartBar/VerticalChartBar.module.css"],"names":["VerticalChartBar","color","values","height","width","gap","maxValue","reduce","acc","curr","className","s","wrapper","length","map","value","i","bar","x","y","fill","VisualizationDataContainer","useState","setValues","options","randomInteger","min","max","Math","floor","random","button","onClick","data","Array","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gPAEe,SAASA,EAAT,GAMX,IALAC,EAKD,EALCA,MACAC,EAID,EAJCA,OACAC,EAGD,EAHCA,OACAC,EAED,EAFCA,MACAC,EACD,EADCA,IAEMC,EAAWJ,EAAOK,QAAO,SAACC,EAAKC,GAEjC,OADIA,EAAOD,IAAKA,EAAMC,GACfD,IACR,GAEH,OACI,qBAAKE,UAAWC,IAAEC,QAAlB,SACI,qBAAKR,OAAQA,EAAQC,GAAOH,EAAOW,OAASR,EAAKF,OAAQA,EAAzD,SACKD,EAAOY,KAAI,SAACC,EAAOC,GAChB,OACI,sBACIN,UAAWC,IAAEM,IAEbC,EAAGF,GAAKZ,EAAQC,GAChBc,EAAGhB,EAAUA,EAASG,EAAYS,EAClCX,MAAOA,EACPD,OAASA,EAASG,EAAYS,EAC9BK,KAAMnB,GALDe,UCjBlB,SAASK,IACpB,MAA4BC,mBAAS,CAAC,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,IAA9D,mBAAOpB,EAAP,KAAeqB,EAAf,KAEMC,EAAU,CACZvB,MAAO,OACPC,OAAQA,EACRC,OAAQ,IACRC,MAAO,GACPC,IAAK,GAYHoB,EAAgB,SAACC,EAAKC,GACxB,OAAOC,KAAKC,MAAMH,EAAME,KAAKE,UAAYH,EAAM,EAAID,KAGvD,OACI,qCACI,qBAAKhB,UAAWC,IAAEC,QAAlB,SACI,cAACZ,EAAD,eAAsBwB,MAE1B,wBAAQd,UAAWC,IAAEoB,OAAQC,QAlBZ,WACrB,IAAMC,EAAO,IAAIC,MAAMT,EAAc,GAAI,MAAML,KAAK,GACpDG,EACIU,EAAKnB,KAAI,WACL,OAAOW,EAAc,EAAG,UAc5B,mCC3BGU,MAJf,WACI,OAAO,cAACd,EAAD,KCEXe,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U,kBCR5BC,EAAOC,QAAU,CAAC,QAAU,4CAA4C,OAAS,6C,kBCAjFD,EAAOC,QAAU,CAAC,QAAU,kCAAkC,IAAM,iC","file":"static/js/main.e96c3577.chunk.js","sourcesContent":["import s from \"./VerticalChartBar.module.css\";\n\nexport default function VerticalChartBar({\n    color,\n    values,\n    height,\n    width,\n    gap,\n}) {\n    const maxValue = values.reduce((acc, curr) => {\n        if (curr > acc) acc = curr;\n        return acc;\n    }, 0);\n\n    return (\n        <div className={s.wrapper}>\n            <svg width={(width + gap) * values.length - gap} height={height}>\n                {values.map((value, i) => {\n                    return (\n                        <rect\n                            className={s.bar}\n                            key={i}\n                            x={i * (width + gap)}\n                            y={height - (height / maxValue) * value}\n                            width={width}\n                            height={(height / maxValue) * value}\n                            fill={color}\n                        />\n                    );\n                })}\n            </svg>\n        </div>\n    );\n}\n","import s from \"./VisualizationDataContainer.module.css\";\nimport VerticalChartBar from \"../VerticalChartBar/VerticalChartBar\";\nimport { useState } from \"react\";\n\nexport default function VisualizationDataContainer() {\n    const [values, setValues] = useState([2, 4, 35, 14, 3, 5, 15, 3]);\n\n    const options = {\n        color: \"#99e\",\n        values: values,\n        height: 200,\n        width: 20,\n        gap: 5,\n    };\n\n    const createRandomData = () => {\n        const data = new Array(randomInteger(10, 100)).fill(0);\n        setValues(\n            data.map(() => {\n                return randomInteger(1, 100);\n            })\n        );\n    };\n\n    const randomInteger = (min, max) => {\n        return Math.floor(min + Math.random() * (max + 1 - min));\n    };\n\n    return (\n        <>\n            <div className={s.wrapper}>\n                <VerticalChartBar {...options} />\n            </div>\n            <button className={s.button} onClick={createRandomData}>\n                Create random data\n            </button>\n        </>\n    );\n}\n","import VisualizationDataContainer from \"./components/VisualizationDataContainer/VisualizationDataContainer\";\n\nfunction App() {\n    return <VisualizationDataContainer />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"VisualizationDataContainer_wrapper__3zlAL\",\"button\":\"VisualizationDataContainer_button__2aDPQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"VerticalChartBar_wrapper__1rycX\",\"bar\":\"VerticalChartBar_bar__1lqoV\"};"],"sourceRoot":""}